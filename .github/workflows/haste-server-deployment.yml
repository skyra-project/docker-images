name: Continuous Deployment - Haste Server

on:
  push:
    branches:
      - main
    paths:
      - 'haste-server/**'
      - '.github/workflows/haste-server-deployment.yml'

jobs:
  pre_ci:
    name: Prepare CI environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: '[Push] Get commit message'
        if: github.event_name == 'push'
        id: push_get_commit_message
        run: echo ::set-output name=push_commit_message::$(git log --format=%B -n 1 HEAD)
      - name: '[Pull Request] Get commit message'
        if: github.event_name == 'pull_request'
        id: pr_get_commit_message
        run: echo ::set-output name=pr_commit_message::$(git log --format=%B -n 1 HEAD^2)
      - name: Add problem matchers
        run: |
          echo "::add-matcher::.github/problemMatchers/tsc.json"
          echo "::add-matcher::.github/problemMatchers/eslint-stylish.json"
    outputs:
      commit_message: $( [ -z "${{ steps.pr_get_commit_message.outputs.pr_commit_message }}" ] && echo "${{ steps.push_get_commit_message.outputs.push_commit_message }}" || echo "${{ steps.pr_get_commit_message.outputs.pr_commit_message }}" )

  Linting:
    name: Linting
    runs-on: ubuntu-latest
    if: "!contains(needs.pre_ci.outputs.commit_message, '[skip ci]')"
    needs: pre_ci
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Use Node.js v16
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Restore NodeJS Cache
        uses: actions/cache@v2.1.5
        with:
          path: node_modules
          key: ${{ runner.os }}-15-${{ hashFiles('**/haste-server/yarn.lock') }}
      - name: Install Dependencies
        run: yarn --frozen-lockfile
        working-directory: haste-server
      - name: Run ESLint
        run: yarn lint --fix=false
        working-directory: haste-server

  Building:
    name: Building
    runs-on: ubuntu-latest
    if: "!contains(needs.pre_ci.outputs.commit_message, '[skip ci]')"
    needs: pre_ci
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Use Node.js v16
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Restore NodeJS Cache
        uses: actions/cache@v2.1.5
        with:
          path: node_modules
          key: ${{ runner.os }}-15-${{ hashFiles('**/haste-server/yarn.lock') }}
      - name: Restore Parcel Cache
        uses: actions/cache@v2.1.5
        with:
          path: ${{ github.workspace }}/haste-server/.parcel-cache
          key: ${{ runner.os }}-parcel-${{ hashFiles('**/haste-server/yarn.lock') }}
      - name: Install Dependencies
        run: yarn --frozen-lockfile
        working-directory: haste-server
      - name: Run Parcel Build
        run: yarn build
        working-directory: haste-server
      - name: Store dist folder
        uses: actions/upload-artifact@v2
        with:
          name: distfolder
          path: haste-server/dist/

  Publish:
    name: Publish image to container registries
    runs-on: ubuntu-latest
    if: >-
      !(contains(needs.pre_ci.outputs.commit_message, '[skip ci]')
      ||contains(needs.pre_ci.outputs.commit_message, '[skip docker]'))
    needs: [pre_ci, Linting, Building]
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Download dist folder
        uses: actions/download-artifact@v2
        with:
          name: distfolder
          path: haste-server/dist/
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1.3.0
      - name: Login to DockerHub
        uses: docker/login-action@v1.9.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.9.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2.5.0
        with:
          push: true
          context: ./haste-server
          tags: |
            skyrabot/haste-server:latest
            ghcr.io/skyra-project/haste-server:latest
      - name: Update repo description
        uses: peter-evans/dockerhub-description@v2.4.2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: skyrabot/haste-server
          readme-filepath: ./haste-server/README.md
          short-description: Up2date and maintained Hastebin server - https://hastebin.skyra.pw
